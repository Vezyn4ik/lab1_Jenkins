pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        AMI_ID = 'ami-0c55b159cbfafe1f0'
        INSTANCE_TYPE = 't2.micro'
        KEY_NAME = 'Jenkins_Integration_Key'
        SECURITY_GROUP = 'WebServerSG'
        INSTANCE_TAG = 'MyWebServer'
        SSH_KEY_CREDENTIALS_ID = 'key-04d64afda0fc8927d'  
    }

    stages {
         stage('Checkout') {
            steps {    
                git branch: 'main', url: 'https://github.com/Vezyn4ik/lab1_Jenkins.git'
            }
        }
        stage('Launch EC2 Instance') {
            steps {
                script {
                    env.INSTANCE_ID = sh(script: """
                        aws ec2 run-instances --image-id ${env.AMI_ID} --count 1 --instance-type ${env.INSTANCE_TYPE} --key-name ${env.KEY_NAME} --security-groups ${env.SECURITY_GROUP} --query 'Instances[0].InstanceId' --output text
                    """, returnStdout: true).trim()

                    sh "aws ec2 create-tags --resources ${env.INSTANCE_ID} --tags Key=Name,Value=${env.INSTANCE_TAG}"

                    echo "Waiting for instance to be running..."
                    sh "aws ec2 wait instance-running --instance-ids ${env.INSTANCE_ID}"

                    env.INSTANCE_IP = sh(script: """
                        aws ec2 describe-instances --instance-ids ${env.INSTANCE_ID} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text
                    """, returnStdout: true).trim()

                    echo "Instance IP: ${env.INSTANCE_IP}"

                    echo "Waiting for instance to be ready..."
                    sleep 60
                }
            }
        }

        stage('Deploy Webpage') {
            steps {
                sshagent(credentials: [env.SSH_KEY_CREDENTIALS_ID]) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ec2-user@${env.INSTANCE_IP} <<EOF
                            sudo yum update -y
                            sudo yum install -y httpd
                            sudo systemctl start httpd
                            sudo systemctl enable httpd
EOF
                        scp -o StrictHostKeyChecking=no -r ./* ec2-user@${env.INSTANCE_IP}:/var/www/html/
                    """
                }
                echo "Website deployed at http://${env.INSTANCE_IP}"
            }
        }
    }
}
